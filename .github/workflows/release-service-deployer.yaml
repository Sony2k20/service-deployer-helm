name: Release Helm Chart for service-deployer

on:
  push:
    branches: ["master"]
    paths:
      - "charts/service-deployer/**"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: "v3.13.2"

      - name: Get current chart version
        id: chart
        run: |
          CURRENT_VERSION=$(grep '^version:' ./service-deployer/Chart.yaml | awk '{print $2}')
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT

      - name: Determine next version
        id: version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""

      - name: Update Chart.yaml version
        run: |
          sed -i "s/^version: .*/version: ${{ steps.version.outputs.new_tag }}/" ./charts/service-deployer/Chart.yaml
          sed -i "s/^appVersion: .*/appVersion: ${{ steps.version.outputs.new_tag }}/" ./charts/service-deployer/Chart.yaml

      - name: Package Helm chart
        run: |
          mkdir -p ./packaged
          helm package ./charts/service-deployer -d ./packaged

      - name: Update Helm repo index
        run: |
          # Download existing index
          curl -sLO https://${{ github.repository_owner }}.github.io/${GITHUB_REPOSITORY#*/}/index.yaml || touch index.yaml
          mv index.yaml ./packaged/
          # Update index while preserving old entries
          helm repo index ./packaged --url https://${{ github.repository_owner }}.github.io/${GITHUB_REPOSITORY#*/} --merge ./packaged/index.yaml

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./packaged
          destination_dir: ./
          keep_files: true # Wichtig: Alte Dateien nicht l√∂schen

      - name: Create Git tag
        run: |
          git tag ${{ steps.version.outputs.new_tag }}
          git push origin ${{ steps.version.outputs.new_tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.new_tag }}
          files: |
            ./packaged/*.tgz
            ./packaged/index.yaml
          generate_release_notes: true
